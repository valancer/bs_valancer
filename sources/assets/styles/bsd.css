@charset "UTF-8";
@import url(noyh.css);
@import url(nanumsquare.css);
/**
 * variable
 */
/**
 * colors
 */
body {
  background-color: #fff; }

/* Common Style */
* {
  margin: 0;
  padding: 0; }

/* set html5 elements to block */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, address, cite, code, del, dfn, em, font, img, ins, q, s, samp, strike, strong, sub, sup, dl, dt, dd, ol, ul, li, fieldset, form, label, legend {
  line-height: 1.3em;
  border: 0 none; }

body {
  position: relative;
  /*min-height: 800px;*/
  min-width: 1440px;
  margin: 0 auto;
  font-size: 100%;
  line-height: 1.3em;
  font-family: "Noyh", "Nanum Square", "Malgun Gothic", Gulim, Dotum, sans-serif;
  -ms-text-size-adjust: 100%;
      text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

header, h1 {
  font-size: 100%; }

html, body {
  height: 100%; }

caption, legend {
  position: absolute;
  top: -9999px;
  left: -9999px;
  width: 0;
  height: 0;
  font-size: 0;
  overflow: hidden;
  visibility: hidden; }

caption {
  display: none; }

img {
  border: none;
  vertical-align: top;
  /*width: 100%;*/ }

select, input {
  vertical-align: top; }

hr {
  display: none;
  border: 0 none; }

ol, ul, ul li {
  list-style: none; }

em {
  font-style: normal; }

menu li {
  list-style: none; }

address {
  display: inline;
  font-style: normal; }

button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  border: 0px;
  background-color: transparent; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input, textarea, keygen, select, button {
  font-family: "Noyh", "Nanum Square", "Malgun Gothic", Gulim, Dotum, sans-serif; }

strong {
  font-weight: normal; }

dfn {
  font-style: normal; }

/* link Style */
a:link, a:visited, a:active, a:focus {
  text-decoration: none; }

a:hover {
  text-decoration: none; }

.hidden {
  display: none !important; }

.visible-hidden {
  visibility: hidden !important; }

.clear {
  clear: both; }

.txt-center {
  text-align: center !important; }

/* forms */
fieldset {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

input[type=submit] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  border: 0px; }

@font-face {
  font-family: "Icons";
  src: url("/assets/fonts/icons/Icons.eot");
  src: url("/assets/fonts/icons/Icons.eot?#iefix") format("eot"), url("/assets/fonts/icons/Icons.woff") format("woff"), url("/assets/fonts/icons/Icons.ttf") format("truetype"), url("/assets/fonts/icons/Icons.svg#Icons") format("svg"); }

.icon-arrow01:before, .icon-asset:before, .icon-metering:before, .global-menu .title .btn-language:after, .global-menu .title .service.asset:before, .global-menu .title .service.metering:before, .global-menu .user .company:after, .sub-menus .all:after {
  font-family: "Icons";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  text-decoration: none;
  text-transform: none; }

.icon-arrow01:before {
  content: ""; }

.icon-asset:before {
  content: ""; }

.icon-metering:before {
  content: ""; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/**
 * z-index
**/
/**
 * states
 */
/**
 * import
 */
/* GNB HEADER */
.global-menu {
  position: relative;
  padding: 15px 40px 0 25px;
  height: 70px;
  border-bottom: 3px solid #e7e7e7;
  background-color: #fff; }
  .global-menu .title {
    display: block;
    position: absolute;
    top: 0px;
    right: 0;
    bottom: 0;
    left: 25px;
    z-index: 0; }
    .global-menu .title:before {
      content: '';
      display: block;
      position: absolute;
      top: 50%;
      right: 465px;
      left: 0;
      z-index: 0;
      margin-top: -2px;
      height: 4px;
      background-color: #000; }
    .global-menu .title .btn-language {
      position: absolute;
      top: 25px;
      right: 465px;
      padding-right: 15px;
      font-size: 13px;
      color: #000;
      letter-spacing: 0.4px; }
      .global-menu .title .btn-language:after {
        content: ""; }
      .global-menu .title .btn-language:after {
        position: absolute;
        top: 50%;
        right: 5px;
        margin-top: -5px;
        height: 9px;
        width: 13px;
        font-size: 15px;
        color: #000;
        line-height: 9px; }
    .global-menu .title .bespin-global {
      display: block;
      float: left;
      position: relative;
      z-index: 1;
      margin-top: 15px;
      padding-right: 20px;
      height: 52px;
      background-color: #fff; }
      .global-menu .title .bespin-global:before {
        content: '';
        display: block;
        margin-top: 18px;
        background-image: url(/assets/images/sprites.png);
        background-position: 0px 0px;
        width: 173px;
        height: 16px; }
    .global-menu .title .service {
      display: block;
      position: absolute;
      top: 50%;
      z-index: 1;
      margin-top: -17px;
      padding-right: 20px;
      font-size: 26px;
      font-weight: bold;
      color: #000;
      line-height: 34px;
      background-color: #fff; }
      .global-menu .title .service:before {
        display: inline-block;
        height: 33px;
        width: 37px;
        margin-right: 20px;
        font-size: 31px;
        vertical-align: middle;
        text-align: center; }
      .global-menu .title .service.asset:before {
        content: ""; }
      .global-menu .title .service.metering:before {
        content: ""; }
  .global-menu .uilts {
    position: relative;
    float: right;
    overflow: hidden;
    background-color: #fff; }
    .global-menu .uilts .btns {
      display: block;
      float: left;
      margin-left: 20px;
      height: 52px;
      width: 52px;
      vertical-align: middle;
      text-indent: -9999px; }
      .global-menu .uilts .btns.notifications {
        position: relative;
        background-image: url(/assets/images/sprites.png);
        background-position: -58px -22px;
        width: 52px;
        height: 52px; }
        .global-menu .uilts .btns.notifications .badge {
          display: block;
          position: absolute;
          top: 1px;
          left: 20px;
          padding: 0 3px;
          height: 14px;
          min-width: 9px;
          font-size: 11px;
          font-weight: bold;
          color: #fff;
          text-align: center;
          text-indent: 0px;
          border: 3px solid #fff;
          border-radius: 14px;
          background-color: #f34122; }
      .global-menu .uilts .btns.dashboard {
        background-image: url(/assets/images/sprites.png);
        background-position: 0px -22px;
        width: 52px;
        height: 52px; }
  .global-menu .user {
    float: right;
    position: relative;
    margin-left: 30px;
    padding: 3px 17px 0 70px;
    height: 49px;
    width: 150px;
    background-color: #fff; }
    .global-menu .user .thumb {
      display: block;
      overflow: hidden;
      position: absolute;
      top: 50%;
      left: 0px;
      margin-top: -26px;
      height: 52px;
      width: 52px;
      border-radius: 50%;
      background-color: #000; }
      .global-menu .user .thumb img {
        max-height: 100%;
        max-width: 100%; }
    .global-menu .user .name {
      display: block;
      font-size: 20px;
      font-weight: bold;
      color: #000;
      line-height: 25px; }
      html:lang(en) .global-menu .user .name {
        font-size: 24px; }
    .global-menu .user .company {
      display: block;
      overflow: hidden;
      position: relative;
      height: 21px;
      padding-right: 20px;
      width: 100%;
      font-size: 18px;
      color: rgba(0, 0, 0, 0.51);
      text-align: left;
      text-overflow: ellipsis;
      white-space: nowrap; }
      .global-menu .user .company:before {
        content: '';
        position: absolute;
        right: 20px;
        bottom: 0;
        left: 0;
        height: 2px;
        background-color: #878787; }
      .global-menu .user .company:after {
        content: ""; }
      .global-menu .user .company:after {
        position: absolute;
        top: 50%;
        right: 6px;
        margin-top: -5px;
        height: 9px;
        width: 13px;
        font-size: 15px;
        line-height: 9px;
        color: #878787; }

.sub-menus {
  position: relative;
  height: 78px;
  background-color: #f6f6f6; }
  .sub-menus h2 {
    display: none; }
  .sub-menus .all {
    display: block;
    position: absolute;
    top: 50%;
    right: 40px;
    margin-top: -21px;
    padding: 0 60px 0 23px;
    height: 42px;
    font-size: 16px;
    color: #fff;
    line-height: 42px;
    background-color: #000; }
    .sub-menus .all:after {
      content: ""; }
    .sub-menus .all:after {
      position: absolute;
      top: 50%;
      right: 25px;
      margin-top: -5px;
      height: 9px;
      width: 13px;
      font-size: 15px;
      color: #fff;
      line-height: 9px; }
  .sub-menus .list-menes {
    display: block;
    overflow: hidden;
    padding: 30px 0 0 20px;
    width: 100%; }
    .sub-menus .list-menes > li {
      float: left;
      padding: 0 20px; }
      .sub-menus .list-menes > li a {
        display: block;
        font-size: 18px;
        color: rgba(156, 156, 156, 0.7);
        line-height: 20px; }
        html:lang(en) .sub-menus .list-menes > li a {
          font-size: 20px; }
        .sub-menus .list-menes > li a:hover {
          color: #000; }
      .sub-menus .list-menes > li + li {
        position: relative;
        padding-left: 50px; }
        .sub-menus .list-menes > li + li:before {
          content: '';
          display: block;
          position: absolute;
          top: 50%;
          left: 0;
          margin-top: -2px;
          height: 3px;
          width: 30px;
          background-color: #dedede; }
      .sub-menus .list-menes > li.is-selected a {
        color: #000; }

/* contents */
/* FOOTER */
.footer {
  height: 400px;
  background-color: #000; }

/* CONTENTS */
article.contents.fullsize {
  padding: 0 40px 130px 40px; }

article.contents > .inner {
  overflow: hidden;
  box-sizing: border-box;
  margin: 0 auto;
  padding: 0 40px;
  width: 1440px;
  margin-top: 35px;
  padding-bottom: 130px; }

article.contents .column-left {
  float: left;
  padding-right: 40px;
  width: 310px; }

article.contents .column-right {
  float: left;
  width: 1010px; }

.portal article.contents h1.title {
  background-color: #f6f6f6; }
  .portal article.contents h1.title .inner {
    box-sizing: border-box;
    margin: 0 auto;
    padding: 0 40px;
    width: 1440px;
    padding-top: 25px;
    height: 180px;
    font-size: 48px; }
