/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$sa-bg-prev3-name: 'sa-bg_prev3';
$sa-bg-prev3-x: 0px;
$sa-bg-prev3-y: 0px;
$sa-bg-prev3-offset-x: 0px;
$sa-bg-prev3-offset-y: 0px;
$sa-bg-prev3-width: 20px;
$sa-bg-prev3-height: 36px;
$sa-bg-prev3-total-width: 78px;
$sa-bg-prev3-total-height: 48px;
$sa-bg-prev3-image: '/assets/images/asset/asset_sprites.png';
$sa-bg-prev3: (0px, 0px, 0px, 0px, 20px, 36px, 78px, 48px, '/assets/images/asset/asset_sprites.png', 'sa-bg_prev3', );
$sa-bg-remaintime-name: 'sa-bg_remaintime';
$sa-bg-remaintime-x: 26px;
$sa-bg-remaintime-y: 0px;
$sa-bg-remaintime-offset-x: -26px;
$sa-bg-remaintime-offset-y: 0px;
$sa-bg-remaintime-width: 24px;
$sa-bg-remaintime-height: 24px;
$sa-bg-remaintime-total-width: 78px;
$sa-bg-remaintime-total-height: 48px;
$sa-bg-remaintime-image: '/assets/images/asset/asset_sprites.png';
$sa-bg-remaintime: (26px, 0px, -26px, 0px, 24px, 24px, 78px, 48px, '/assets/images/asset/asset_sprites.png', 'sa-bg_remaintime', );
$sa-bg-scrollnav-on-name: 'sa-bg_scrollnav_on';
$sa-bg-scrollnav-on-x: 56px;
$sa-bg-scrollnav-on-y: 0px;
$sa-bg-scrollnav-on-offset-x: -56px;
$sa-bg-scrollnav-on-offset-y: 0px;
$sa-bg-scrollnav-on-width: 22px;
$sa-bg-scrollnav-on-height: 12px;
$sa-bg-scrollnav-on-total-width: 78px;
$sa-bg-scrollnav-on-total-height: 48px;
$sa-bg-scrollnav-on-image: '/assets/images/asset/asset_sprites.png';
$sa-bg-scrollnav-on: (56px, 0px, -56px, 0px, 22px, 12px, 78px, 48px, '/assets/images/asset/asset_sprites.png', 'sa-bg_scrollnav_on', );
$sa-bg-select-name: 'sa-bg_select';
$sa-bg-select-x: 0px;
$sa-bg-select-y: 42px;
$sa-bg-select-offset-x: 0px;
$sa-bg-select-offset-y: -42px;
$sa-bg-select-width: 26px;
$sa-bg-select-height: 6px;
$sa-bg-select-total-width: 78px;
$sa-bg-select-total-height: 48px;
$sa-bg-select-image: '/assets/images/asset/asset_sprites.png';
$sa-bg-select: (0px, 42px, 0px, -42px, 26px, 6px, 78px, 48px, '/assets/images/asset/asset_sprites.png', 'sa-bg_select', );
$sa-bg-selectcon-name: 'sa-bg_selectcon';
$sa-bg-selectcon-x: 56px;
$sa-bg-selectcon-y: 18px;
$sa-bg-selectcon-offset-x: -56px;
$sa-bg-selectcon-offset-y: -18px;
$sa-bg-selectcon-width: 16px;
$sa-bg-selectcon-height: 12px;
$sa-bg-selectcon-total-width: 78px;
$sa-bg-selectcon-total-height: 48px;
$sa-bg-selectcon-image: '/assets/images/asset/asset_sprites.png';
$sa-bg-selectcon: (56px, 18px, -56px, -18px, 16px, 12px, 78px, 48px, '/assets/images/asset/asset_sprites.png', 'sa-bg_selectcon', );
$spritesheet-width: 78px;
$spritesheet-height: 48px;
$spritesheet-image: '/assets/images/asset/asset_sprites.png';
$spritesheet-sprites: ($sa-bg-prev3, $sa-bg-remaintime, $sa-bg-scrollnav-on, $sa-bg-select, $sa-bg-selectcon, );
$spritesheet: (78px, 48px, '/assets/images/asset/asset_sprites.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
